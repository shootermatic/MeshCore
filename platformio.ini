; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
extra_configs =
	variants/*/platformio.ini

[arduino_base]
framework = arduino
monitor_speed = 115200
lib_deps =
  SPI
  Wire
  jgromes/RadioLib @ ^7.1.2
  rweather/Crypto @ ^0.4.0
  adafruit/RTClib @ ^2.1.3
  melopero/Melopero RV3028 @ ^1.1.0
  electroniccats/CayenneLPP @ 1.4.0
build_flags = -w -DNDEBUG -DRADIOLIB_STATIC_ONLY=1 -DRADIOLIB_GODMODE=1
  -D LORA_FREQ=869.525
  -D LORA_BW=250
  -D LORA_SF=11
build_src_filter =
  +<*.cpp>
  +<helpers/*.cpp>

; ----------------- ESP32 ---------------------

[esp32_base]
extends = arduino_base
platform = espressif32
monitor_filters = esp32_exception_decoder
extra_scripts = merge-bin.py
build_flags = ${arduino_base.build_flags}
;  -D ESP32_CPU_FREQ=80          ; change it to your need
build_src_filter = ${arduino_base.build_src_filter}

[esp32_ota]
lib_deps =
  me-no-dev/ESPAsyncWebServer @ ^3.6.0
  file://arch/esp32/AsyncElegantOTA

; ----------------- NRF52 ---------------------

[nrf52_base]
extends = arduino_base
platform = nordicnrf52
build_flags = ${arduino_base.build_flags}
  -D NRF52_PLATFORM

[nrf52840_base]
extends = nrf52_base
build_flags = ${nrf52_base.build_flags}
lib_deps =
  ${nrf52_base.lib_deps}
  rweather/Crypto @ ^0.4.0
  https://github.com/adafruit/Adafruit_nRF52_Arduino

; ----------------- RP2040 ---------------------

[rp2040_base]
extends = arduino_base
build_flags = ${arduino_base.build_flags}
  -D RP2040_PLATFORM

; ----------------- STM32 ----------------------

[stm32_base]
extends = arduino_base
platform = platformio/ststm32@19.1.0
platform_packages = platformio/framework-arduinoststm32@https://github.com/stm32duino/Arduino_Core_STM32/archive/2.10.1.zip
extra_scripts = post:arch/stm32/build_hex.py
build_flags = ${arduino_base.build_flags}
  -D STM32_PLATFORM
  -I src/helpers/stm32
build_src_filter = 
  ${arduino_base.build_src_filter}
  +<helpers/stm32>
  +<*.cpp>
  +<helpers/*.cpp>
lib_deps = ${arduino_base.lib_deps}
  file://arch/stm32/Adafruit_LittleFS_stm32